var requestor = require('request');

var ST_AUTH_TOKEN = "UPDATE to use TOKEN generated by smartthings_auth.js"; //Update accordingly with result from smartthings_auth.js
var gEndpointURI = null;


exports.init = function(server) {
	//The auth_token shouldn't expire, but if the app is modified and republished the endpoint does, so we need to update this on initialization.
	geturi(function(endpointuri) {
		gEndpointURI = endpointuri;
	});
}

function st_get(req, reply) {

	var name = req.params.name;
	var request_options = {
		uri: gEndpointURI + "/switch/" + name,
		headers: { Authorization: 'Bearer '+ST_AUTH_TOKEN }
	};

	requestor(request_options, function(err, response, body) {
		if (err)
			return reply("Error calling Smarthings API: " + err);
		else {
			return reply(body).code(200);
		}
	});

}

function st_set(req, reply) {

	var name = req.params.name;
	var state = req.params.state;

	var request_options = {
		method: "PUT",
		uri: gEndpointURI+ "/switch/" + name + "/" +state,
		headers: { Authorization: 'Bearer '+ST_AUTH_TOKEN }
	};

	requestor(request_options, function(err, response, body) {
		if (err)
			return reply("Error calling Smarthings API: " + err);
		else
			return reply(body).code(200);
	});
}



function geturi(callback/*(uri)*/) {

	// setup request options with uri to get this app's endpoints
	// and add retrieved oauth token to auth header
	var request_options = {
		uri: 'https://graph.api.smartthings.com/api/smartapps/endpoints',
		headers: { Authorization: 'Bearer '+ST_AUTH_TOKEN }
	};

	requestor(request_options, function(err, response, body) {
		if (err) {
			console.log('Smartthings Endpoints Request Error', err);
			return callback(null);
		}

		return callback(JSON.parse(body)[0]['uri']);
	});

}
